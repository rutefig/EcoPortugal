{"version":3,"sources":["common/NavigationBar.js","common/Footer.js","data/waste_types.js","home/CategoryCard.js","home/CategoryCardList.js","home/SearchBox.js","home/HomePage.js","category/PointCard.js","category/PointsList.js","category/TipsCard.js","category/TipsList.js","category/CategoryPage.js","recyclepoint/MapContainer.js","recyclepoint/RecyclePointPage.js","recyclepoint/AddRecyclePointWithMap.js","recyclepoint/AddRecyclePoint.js","App.js","serviceWorker.js","index.js"],"names":["NavigationBar","Navbar","bg","variant","Brand","href","Toggle","aria-controls","Nav","className","Link","Footer","waste_types","id","name","icon","CategoryCard","props","Card","Img","src","style","width","Body","Title","CategoryCardList","wasteCategories","CardColumns","map","value","index","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","HomePage","useState","setSearchfield","filteredCategories","filter","toLowerCase","includes","event","target","PointCard","location","distance","coords","Subtitle","Text","document","URL","PointsList","category","recyclePoints","setRecyclePoints","distances","setDistances","calculateDistances","distances_array","pointLongitude","geometry","coordinates","pointLatitude","distanceValue","lat1","lon1","lat2","lon2","unit","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","latitude","longitude","loadPointsAPI","a","fetch","response","json","data","features","useEffect","v","i","sort","b","show","setShow","handleClose","Container","Button","onClick","columnCount","slice","properties","TPRS_DESC","FRE_AB","Modal","onHide","backdrop","keyboard","Header","closeButton","TipsCard","TipsList","CategoryPage","selectedCategory","useParams","setLocation","handlePositionReceived","watchId","navigator","geolocation","watchPosition","clearWatch","fluid","Row","Col","Map","options","onMount","onMountProps","ref","useRef","setMap","onLoad","window","google","maps","current","script","createElement","head","append","addEventListener","removeEventListener","height","margin","borderRadius","defaultProps","center","lat","lng","zoom","RecyclePointPage","selectedPoint","split","mapProps","point","Marker","position","label","title","addListener","url","parseFloat","AddRecyclePointWithMap","useForm","register","errors","handleSubmit","handleShow","Form","onSubmit","Group","controlId","Control","required","city","Check","AddRecyclePoint","streetAdd","numberAdd","onExiting","to","App","path","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8181f8a0.chunk.js","sourcesContent":["import React from \"react\";\nimport {Nav, Navbar} from \"react-bootstrap\";\n\nconst NavigationBar = () => {\n  return (\n    <Navbar bg=\"light\" variant=\"light\">\n      <Navbar.Brand href=\"/\">EcoPortugal</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Nav className=\"ml-auto\">\n        <Nav.Link href=\"#sugerir\">Sugerir</Nav.Link>\n        <Nav.Link href=\"#reportar\">Reportar</Nav.Link>\n        <Nav.Link href=\"#informacoes\">Informações</Nav.Link>\n      </Nav>\n    </Navbar>\n  );\n}\n\nexport default NavigationBar;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer bg-light text-center\">\n      <p className=\"text-secondary\">\n        @Copyright Rute Figueiredo <br/>\n        Versão 1 - Julho 2020\n      </p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","export const waste_types = [\n    {\n        id: 1,\n        name: 'Papel',\n        icon: 'https://image.flaticon.com/icons/svg/1598/1598407.svg',\n    },\n    {\n        id: 2,\n        name: 'Plástico',\n        icon: 'https://image.flaticon.com/icons/svg/1598/1598406.svg',\n    },\n    {\n        id: 3,\n        name: 'Vidro',\n        icon: 'https://image.flaticon.com/icons/svg/1598/1598173.svg',\n    },\n    {\n        id: 4,\n        name: 'Pilhas',\n        icon: 'https://image.flaticon.com/icons/svg/1730/1730780.svg',\n    },\n    {\n        id: 5,\n        name: 'Lâmpadas',\n        icon: 'https://image.flaticon.com/icons/svg/2910/2910875.svg',\n    },\n    {\n        id: 6,\n        name: 'Pequenos Electrodomésticos',\n        icon: 'https://www.flaticon.com/premium-icon/icons/svg/2030/2030135.svg',\n    },\n]\n","import React from \"react\";\nimport {Card} from \"react-bootstrap\";\n\nconst CategoryCard = props => {\n  const { id, name, icon } = props;\n\n  return (\n    <a href={name}>\n        <Card className={'shadow rounded p-3 mt-3 grow text-center'}>\n            <Card.Img variant=\"top\" className=\"icon\" src={icon} style={{width:\"150px\"}}/>\n            <Card.Body>\n                <Card.Title className=\"text-center text-dark\">{name}</Card.Title>\n            </Card.Body>\n        </Card>\n    </a>\n  );\n}\n\nexport default CategoryCard;\n","import React from \"react\";\nimport { CardColumns } from \"react-bootstrap\";\nimport CategoryCard from \"./CategoryCard\";\n\nconst CategoryCardList = ({ wasteCategories }) => {\n  return (\n    <CardColumns className=\"\">\n      {\n        wasteCategories.map((value, index) => {\n          return (\n              <CategoryCard\n                className=\"col-6\"\n                key={index}\n                id={wasteCategories[index].id}\n                name={wasteCategories[index].name}\n                icon={wasteCategories[index].icon}\n              />\n          );\n        })\n      }\n    </CardColumns>\n  );\n}\n\nexport default CategoryCardList;\n","import React from \"react\";\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className=\"searchbox\">\n      <input\n        className=\"searchbox-input\"\n        type='search'\n        placeholder='Diga-nos o que pretende reciclar'\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;\n","import React, { useState } from \"react\";\nimport { waste_types } from \"../data/waste_types\";\nimport CategoryCardList from \"./CategoryCardList\";\nimport SearchBox from \"./SearchBox\";\n\nconst HomePage = () => {\n  const [wasteCategories, setWasteCategories] = useState(waste_types);\n  const [searchfield, setSearchfield] = useState('');\n\n  const filteredCategories = wasteCategories.filter(wasteCategories => {\n    return wasteCategories.name.toLowerCase().includes(searchfield.toLowerCase());\n  });\n\n  function onSearchChange(event) {\n    setSearchfield(event.target.value);\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">Vamos deixar Portugal mais limpo</h1>\n      <SearchBox searchChange={onSearchChange} />\n      <CategoryCardList wasteCategories={filteredCategories} />\n    </>\n  );\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nconst PointCard = ({ id, name, location, distance, coords }) => {\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>{name}</Card.Title>\n        <Card.Subtitle>{location}</Card.Subtitle>\n        <Card.Text>\n          Distância: {distance}\n        </Card.Text>\n        <Card.Link href=\"#\">Reportar</Card.Link>\n        <Card.Link href={`${document.URL}/${name}-${location}/${coords}`}>Direções</Card.Link>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default PointCard;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, CardColumns, Button, Modal } from \"react-bootstrap\";\nimport PointCard from \"./PointCard\";\n\nconst PointsList = ({ location, category }) => {\n  const [recyclePoints, setRecyclePoints] = useState([]);\n  const [distances, setDistances] = useState([]);\n\n  // CODE FROM: https://www.geodatasource.com/developers/javascript\n  function distance(lat1, lon1, lat2, lon2, unit) {\n    if ((lat1 == lat2) && (lon1 == lon2)) {\n  \t\treturn 0;\n  \t}\n  \telse {\n  \t\tvar radlat1 = Math.PI * lat1/180;\n  \t\tvar radlat2 = Math.PI * lat2/180;\n  \t\tvar theta = lon1-lon2;\n  \t\tvar radtheta = Math.PI * theta/180;\n  \t\tvar dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n  \t\tif (dist > 1) {\n  \t\t\tdist = 1;\n  \t\t}\n  \t\tdist = Math.acos(dist);\n  \t\tdist = dist * 180/Math.PI;\n  \t\tdist = dist * 60 * 1.1515;\n  \t\tif (unit==\"K\") { dist = dist * 1.609344 }\n  \t\tif (unit==\"N\") { dist = dist * 0.8684 }\n  \t\treturn dist;\n  \t}\n  }\n\n  function calculateDistances() {\n    let distances_array = [];\n    recyclePoints.map((value, index) => {\n      const pointLongitude = recyclePoints[index].geometry.coordinates[0];\n      const pointLatitude = recyclePoints[index].geometry.coordinates[1];\n      const distanceValue = distance(location.latitude, location.longitude, pointLatitude, pointLongitude, \"K\");\n\n      distances_array[index] = distanceValue;\n    });\n\n    setDistances(distances_array);\n\n  }\n\n  const loadPointsAPI = async () => {\n    const response = await fetch('https://services.arcgis.com/1dSrzEWVQn5kHHyK/arcgis/rest/services/Amb_Reciclagem/FeatureServer/0/query?where=1%3D1&outFields=*&f=pgeojson');\n    const data = await response.json();\n\n    setRecyclePoints(data.features);\n  }\n\n  useEffect(() => {\n    distances.map((v, i) => {\n      setRecyclePoints([...recyclePoints, recyclePoints[i] = {...recyclePoints[i], distance: distances[i]}]);\n    });\n    // Ordena o array dos pontos de recolha por distância mais próxima\n    setRecyclePoints(recyclePoints.sort((a, b) => {\n      return a.distance - b.distance;\n    }));\n  }, [distances])\n\n  useEffect(() => {\n    if (category === 'Papel' || category === 'Vidro' || category === 'Plástico') {\n      loadPointsAPI();\n    }\n  }, []);\n\n  useEffect(() => {\n    calculateDistances();\n  }, [recyclePoints, location]);\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  return (\n    <>\n      <Container className=\"cards-list\">\n        <div className=\"clearfix p-2\">\n          <h3 className=\"list-title float-left\">Pontos de Recolha</h3>\n          <Button className=\"float-right\" variant=\"primary\" onClick={handleShow}>Adicionar</Button>\n        </div>\n        <CardColumns style={{columnCount: \"1\"}}>\n          {\n            recyclePoints.slice(0, 10).map((value, index) => {\n              return (\n                <PointCard\n                  key={index}\n                  id={recyclePoints[index].id}\n                  name={recyclePoints[index].properties.TPRS_DESC}\n                  location={recyclePoints[index].properties.FRE_AB}\n                  distance={recyclePoints[index].distance}\n                  coords={recyclePoints[index].geometry.coordinates}\n                />\n              );\n            })\n          }\n        </CardColumns>\n      </Container>\n\n      <Modal\n          show={show}\n          onHide={handleClose}\n          backdrop=\"static\"\n          keyboard={false}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Adicionar Ponto de Recolha</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            Conhece algum ponto de recolha que não esteja identificado?\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Não\n            </Button>\n            <Button variant=\"primary\" href={`/${category}/addPointWithMap`}>Sim, e estou no local</Button>\n            <Button variant=\"primary\" href={`/${category}/addPointForm`}>Sim, e sei a morada</Button>\n          </Modal.Footer>\n        </Modal>\n    </>\n  );\n}\n\nexport default PointsList;\n","import React from \"react\";\nimport {Card} from \"react-bootstrap\";\n\n// TODO: Ver como meter a imagem do lado esquerdo como deve ser\n\nconst TipsCard = () => {\n  return (\n    <Card>\n      <Card.Img variant=\"left\" src=\"https://via.placeholder.com/150\" />\n      <Card.Body>\n        <Card.Title>Some Place</Card.Title>\n        <Card.Text>\n          Uma breve descrição do local e assim por diante\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default TipsCard;\n","import React from \"react\";\nimport {Container, Row, Col, CardColumns, Button} from \"react-bootstrap\";\nimport TipsCard from \"./TipsCard\";\n\nconst TipsList = () => {\n  return (\n    <Container className=\"cards-list\">\n      <div className=\"clearfix p-2\">\n        <h3 className=\"list-title float-left\">Outras dicas</h3>\n        <Button className=\"float-right\" variant=\"primary\">Adicionar</Button>\n      </div>\n      <CardColumns style={{columnCount: \"1\"}}>\n        <TipsCard />\n        <TipsCard />\n      </CardColumns>\n    </Container>\n  );\n}\n\nexport default TipsList;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport PointsList from \"./PointsList\";\nimport TipsList from \"./TipsList\";\n\nconst CategoryPage = () => {\n  let { selectedCategory } = useParams();\n\n  const [location, setLocation] = useState({});\n\n\n  // TODO: Confirmar o will unmount\n  // Conteudo retirado do seguinte link: https://www.youtube.com/watch?v=6WB16wZS61c\n  useEffect(() => {\n    const watchId = navigator.geolocation.watchPosition(handlePositionReceived);\n\n    return () => navigator.geolocation.clearWatch(watchId);\n  }, []);\n\n  function handlePositionReceived({ coords }) {\n    const { latitude, longitude } = coords;\n\n    setLocation({ latitude, longitude });\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">{selectedCategory}</h1>\n      <Container fluid>\n        <Row>\n          <Col>\n            <PointsList location={location} category={selectedCategory}/>\n          </Col>\n          <Col>\n            <TipsList />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default CategoryPage;\n","import React, { useState, useEffect, useRef } from 'react'\nexport default function Map({ options, onMount, className, onMountProps }) {\n  const ref = useRef();\n  const [map, setMap] = useState();\n\n  useEffect(() => {\n    const onLoad = () => setMap(new window.google.maps.Map(ref.current, options))\n    if (!window.google) {\n      const script = document.createElement(`script`)\n      script.src =\n        'https://maps.googleapis.com/maps/api/js?key=AIzaSyCsFiLuvaPEogirLPRzA-kmsK9NLoQ8MJc'\n      document.head.append(script)\n      script.addEventListener(`load`, onLoad)\n      return () => script.removeEventListener(`load`, onLoad)\n    } else onLoad()\n  }, [options])\n\n  if (map && typeof onMount === `function`) onMount(map, onMountProps)\n  return (\n    <div\n      style={{ height: `60vh`, margin: `1em 0`, borderRadius: `0.5em` }}\n      {...{ ref, className }}\n    />\n  )\n}\nMap.defaultProps = {\n  options: {\n    center: { lat: 38.7166700, lng: -9.1333300 },\n    zoom: 5,\n  },\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport MapContainer from \"./MapContainer\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst RecyclePointPage = () => {\n  let { selectedCategory, selectedPoint, coordinates } = useParams();\n  let coords = coordinates.split(\",\");\n\n  // https://janosh.dev/blog/google-maps+react-hooks\n  function addMarkers(map, point) {\n    const marker = new window.google.maps.Marker({\n      map,\n      position: point.coords,\n      label: point.title,\n      title: point.title,\n    })\n    marker.addListener(`click`, () => {\n      window.location.href = point.url\n    })\n  }\n\n  const point = {\n    coords: { lat: parseFloat(coords[1]), lng: parseFloat(coords[0]) },\n    title: '',\n    url: '',\n  };\n\n  const mapProps = {\n    options: { center: { lat: 38.7166700, lng: -9.1333300 }, zoom: 12 },\n    onMount: addMarkers,\n    onMountProps: point,\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">{selectedPoint}</h1>\n      <Container fluid>\n        <Row>\n          <Col>\n            <MapContainer {...mapProps}/>\n          </Col>\n          <Col>\n            <h3>Neste ponto de recolha pode reciclar:</h3>\n            <ul>\n              <li>Papel</li>\n              <li>Plástico</li>\n              <li>Vidro</li>\n            </ul>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default RecyclePointPage;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Container, Row, Col, Form, Modal } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { waste_types } from \"../data/waste_types\";\nimport MapContainer from \"./MapContainer\";\nimport { useParams } from \"react-router-dom\";\n\nconst AddRecyclePointWithMap = () => {\n\n  const { selectedCategory } = useParams();\n\n  const [wasteCategories, setWasteCategories] = useState(waste_types);\n\n  const [location, setLocation] = useState({});\n\n  // Conteudo retirado do seguinte link: https://www.youtube.com/watch?v=6WB16wZS61c\n  useEffect(() => {\n    const watchId = navigator.geolocation.watchPosition(handlePositionReceived);\n\n    return () => navigator.geolocation.clearWatch(watchId);\n  }, []);\n\n  function handlePositionReceived({ coords }) {\n    const { latitude, longitude } = coords;\n\n    setLocation({ latitude, longitude });\n  }\n\n  // https://janosh.dev/blog/google-maps+react-hooks\n  function addMarkers(map, point) {\n    const marker = new window.google.maps.Marker({\n      map,\n      position: point.coords,\n      label: point.title,\n      title: point.title,\n    })\n    marker.addListener(`click`, () => {\n      window.location.href = point.url\n    })\n  }\n\n  const point = {\n    coords: { lat: location.latitude, lng: location.longitude },\n    title: 'A Minha Localização',\n    url: '',\n  };\n\n  const mapProps = {\n    options: { center: { lat: 38.7166700, lng: -9.1333300 }, zoom: 12 },\n    onMount: addMarkers,\n    onMountProps: point,\n  }\n\n  const { register, errors, handleSubmit } = useForm();\n  const onSubmit = data => {\n    // Save data\n    handleShow();\n  }\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <h1 className=\"title\">Adicionar Ponto de Recolha</h1>\n      <Container fluid>\n        <Row>\n          <Col>\n            <MapContainer {...mapProps} />\n          </Col>\n          <Col>\n            <p className=\"form-information\">Por favor tenha atenção que estes dados serão confirmados,\n            por favor coloque tudo o mais certo possível de forma a\n            facilitar a nossa confirmação. Todos os campos são obrigatórios</p>\n          <Form onSubmit={handleSubmit(onSubmit)}>\n            <Form.Group controlId=\"formName\">\n              <Form.Text className=\"text-danger\">\n                {errors?.name && \"Este campo é obrigatório\"}\n              </Form.Text>\n              <Form.Control type=\"text\" placeholder=\"Nome\" name=\"name\" ref={register({required: true})}/>\n              <Form.Text className=\"text-muted\">\n                * Required\n              </Form.Text>\n            </Form.Group>\n            <Form.Group>\n              <Form.Text className=\"text-danger\">\n                {errors?.city && \"Este campo é obrigatório\"}\n              </Form.Text>\n              <Form.Control type=\"text\" placeholder=\"Localidade\" name=\"city\" ref={register({required: true})}/>\n              <Form.Text className=\"text-muted\">\n                * Required\n              </Form.Text>\n            </Form.Group>\n            <Form.Group>\n              {wasteCategories.map((value) => (\n                <div key={value.name} className=\"mb-3\">\n                  <Form.Check\n                    type='checkbox'\n                    id={`checkbox-${value.name}`}\n                    label={value.name}\n                    name={value.name}\n                    ref={register}\n                  />\n                </div>\n              ))}\n            </Form.Group>\n            <Button className=\"float-right\" type=\"submit\">Confirmar</Button>\n          </Form>\n          <Button variant=\"secondary\" href={`/${selectedCategory}`}>Cancelar</Button>\n          </Col>\n        </Row>\n      </Container>\n\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n        >\n        <Modal.Header closeButton>\n          <Modal.Title>Ponto de Recolha Adicionado</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          O Ponto de Recolha que adicionou será adicionado assim que for confirmado pela nossa equipa.\n          Obrigada pela sua colaboração. Juntos fazemos Portugal um país mais verde!\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nexport default AddRecyclePointWithMap;\n","import React, { useState } from \"react\";\nimport { Form, Col, Row, Button, Modal } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { waste_types } from \"../data/waste_types\";\nimport { Redirect } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\n\nconst AddRecyclePoint = () => {\n\n  const { selectedCategory } = useParams();\n  const [wasteCategories, setWasteCategories] = useState(waste_types);\n\n  const { register, errors, handleSubmit } = useForm();\n  const onSubmit = data => {\n    // Save data\n    handleShow();\n  }\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleExit = () => {\n    return <Redirect to=\"/\" />\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">Adicionar Ponto de Recolha com Morada</h1>\n      <p className=\"form-information\">Por favor tenha atenção que estes dados serão confirmados,\n      por favor coloque tudo o mais certo possível de forma a\n      facilitar a nossa confirmação.</p>\n\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Form.Group controlId=\"formName\">\n        <Form.Text className=\"text-danger\">\n          {errors?.name && \"Este campo é obrigatório\"}\n        </Form.Text>\n        <Form.Control type=\"text\" placeholder=\"Nome\" name=\"name\" ref={register({required: true})}/>\n        <Form.Text className=\"text-muted\">\n          * Required\n        </Form.Text>\n      </Form.Group>\n      <Form.Group>\n        <Form.Text className=\"text-danger\">\n          {errors?.city && \"Este campo é obrigatório\"}\n        </Form.Text>\n        <Form.Control type=\"text\" placeholder=\"Localidade\" name=\"city\" ref={register({required: true})} />\n        <Form.Text className=\"text-muted\">\n          * Required\n        </Form.Text>\n      </Form.Group>\n      <Form.Group controlId=\"formCategories\" name=\"categories\" ref={register({required: true})}>\n        {wasteCategories.map((value) => (\n          <div key={value.name} className=\"mb-3\">\n            <Form.Check\n              type='checkbox'\n              id={`checkbox-${value.name}`}\n              label={value.name}\n              name={value.name}\n              ref={register}\n            />\n          </div>\n        ))}\n      </Form.Group>\n\n      <Form.Group controlId=\"formAddress\">\n        <Row>\n          <Col>\n            <Form.Text className=\"text-danger\">\n              {errors?.streetAdd && \"Este campo é obrigatório\"}\n            </Form.Text>\n            <Form.Control type=\"text\" placeholder=\"Rua\" name=\"streetAdd\" ref={register({required: true})} />\n            <Form.Text className=\"text-muted\">\n              * Required\n            </Form.Text>\n          </Col>\n          <Col>\n            <Form.Text className=\"text-danger\">\n              {errors?.numberAdd && \"Este campo é obrigatório\"}\n            </Form.Text>\n            <Form.Control type=\"text\" placeholder=\"Nº\" name=\"numberAdd\" ref={register({required: true})} />\n              <Form.Text className=\"text-muted\">\n                * Required\n              </Form.Text>\n          </Col>\n        </Row>\n      </Form.Group>\n      <Form.Group controlId=\"formWebsite\">\n        <Form.Control type=\"text\" placeholder=\"Website\" name=\"website\" ref={register({required: false})} />\n      </Form.Group>\n      <Button className=\"float-right\" variant=\"primary\" type=\"submit\">Confirmar</Button>\n    </Form>\n     <br />\n    <Button variant=\"secondary\" href={`/${selectedCategory}`}>Cancelar</Button>\n\n    <Modal\n      show={show}\n      onHide={handleClose}\n      backdrop=\"static\"\n      keyboard={false}\n      onExiting={handleExit}\n      >\n      <Modal.Header closeButton>\n        <Modal.Title>Ponto de Recolha Adicionado</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        O Ponto de Recolha que adicionou será adicionado assim que for confirmado pela nossa equipa.\n        Obrigada pela sua colaboração. Juntos fazemos Portugal um país mais verde!\n      </Modal.Body>\n    </Modal>\n    </>\n  );\n}\n\nexport default AddRecyclePoint;\n","import React  from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Container} from \"react-bootstrap\";\nimport {\n    Route,\n    Switch,\n} from \"react-router-dom\";\nimport NavigationBar from \"./common/NavigationBar\";\nimport Footer from \"./common/Footer\";\nimport HomePage from \"./home/HomePage\";\nimport CategoryPage from \"./category/CategoryPage\";\nimport RecyclePointPage from \"./recyclepoint/RecyclePointPage\";\nimport AddRecyclePointWithMap from \"./recyclepoint/AddRecyclePointWithMap\";\nimport AddRecyclePoint from \"./recyclepoint/AddRecyclePoint\";\n\nconst App = () => {\n  return(\n    <>\n        <NavigationBar />\n        <Container fluid>\n            <Switch>\n              <Route path=\"/:selectedCategory/addPointWithMap\">\n                <AddRecyclePointWithMap />\n              </Route>\n              <Route path=\"/:selectedCategory/addPointForm\">\n                <AddRecyclePoint />\n              </Route>\n              <Route path=\"/:selectedCategory/:selectedPoint/:coordinates\">\n                <RecyclePointPage />\n              </Route>\n              <Route path=\"/:selectedCategory\">\n                <CategoryPage />\n              </Route>\n              <Route path=\"/\">\n                  <HomePage />\n              </Route>\n            </Switch>\n        </Container>\n        <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n        <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}